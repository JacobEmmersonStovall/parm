{
  "version": 1,
  "projects": {
    "react-use-viewport-size": {
      "root": "libs/react/use-viewport-size",
      "sourceRoot": "libs/react/use-viewport-size/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/use-viewport-size/tsconfig.lib.json",
              "libs/react/use-viewport-size/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/use-viewport-size/**"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:bundle",
          "options": {
            "outputPath": "dist/libs/react/use-viewport-size",
            "tsConfig": "libs/react/use-viewport-size/tsconfig.lib.json",
            "project": "libs/react/use-viewport-size/package.json",
            "entryFile": "libs/react/use-viewport-size/src/index.ts",
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/use-viewport-size/jest.config.js",
            "tsConfig": "libs/react/use-viewport-size/tsconfig.spec.json"
          }
        }
      }
    },
    "react": {
      "root": "apps/react",
      "sourceRoot": "apps/react/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/react/cypress.json",
            "tsConfig": "apps/react/tsconfig.e2e.json",
            "devServerTarget": "react:storybook",
            "headless": true
          },
          "configurations": {
            "ci": {
              "headless": true
            },
            "dev": {
              "headless": false,
              "exit": false,
              "env": {
                "cypress-plugin-snapshots": {
                  "serverEnabled": true,
                  "serverHost": "localhost",
                  "serverPort": 2121
                }
              }
            },
            "update": {
              "headless": true,
              "env": {
                "cypress-plugin-snapshots": {
                  "updateSnapshots": true
                }
              }
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/react/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/react/**"
            ]
          }
        },
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/react",
            "port": 4400,
            "config": {
              "configFolder": ".storybook/react"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build": {
          "builder": "@nrwl/storybook:build",
          "options": {
            "uiFramework": "@storybook/react",
            "outputPath": "dist/storybook/react",
            "config": {
              "configFolder": ".storybook/react"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    },
    "greenroom-ui": {
      "root": "apps/greenroom-ui",
      "sourceRoot": "apps/greenroom-ui/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/greenroom-ui",
            "index": "apps/greenroom-ui/src/index.html",
            "main": "apps/greenroom-ui/src/main.tsx",
            "polyfills": "apps/greenroom-ui/src/polyfills.ts",
            "tsConfig": "apps/greenroom-ui/tsconfig.app.json",
            "assets": [
              "apps/greenroom-ui/src/favicon.ico",
              "apps/greenroom-ui/src/assets"
            ],
            "styles": [
              "apps/greenroom-ui/src/styles.scss"
            ],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/greenroom-ui/src/environments/environment.ts",
                  "with": "apps/greenroom-ui/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "greenroom-ui:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "greenroom-ui:build:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/greenroom-ui/tsconfig.app.json",
              "apps/greenroom-ui/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/greenroom-ui/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/greenroom-ui/jest.config.js",
            "tsConfig": "apps/greenroom-ui/tsconfig.spec.json"
          }
        }
      }
    },
    "greenroom-ui-e2e": {
      "root": "apps/greenroom-ui-e2e",
      "sourceRoot": "apps/greenroom-ui-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/greenroom-ui-e2e/cypress.json",
            "tsConfig": "apps/greenroom-ui-e2e/tsconfig.e2e.json",
            "devServerTarget": "greenroom-ui:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "greenroom-ui:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/greenroom-ui-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/greenroom-ui-e2e/**"
            ]
          }
        }
      }
    },
    "greenroom-rest-api": {
      "root": "apps/greenroom-rest-api",
      "sourceRoot": "apps/greenroom-rest-api/src",
      "projectType": "application",
      "prefix": "greenroom-rest-api",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/greenroom-rest-api",
            "main": "apps/greenroom-rest-api/src/main.ts",
            "tsConfig": "apps/greenroom-rest-api/tsconfig.app.json",
            "assets": [
              "apps/greenroom-rest-api/src/assets"
            ],
            "webpackConfig": "apps/greenroom-rest-api/webpack.config.ts"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/greenroom-rest-api/src/environments/environment.ts",
                  "with": "apps/greenroom-rest-api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "greenroom-rest-api:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "greenroom-rest-api:build:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/greenroom-rest-api/tsconfig.app.json",
              "apps/greenroom-rest-api/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/greenroom-rest-api/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/greenroom-rest-api/jest.config.js",
            "tsConfig": "apps/greenroom-rest-api/tsconfig.spec.json"
          }
        }
      }
    },
    "greenroom-interface": {
      "root": "libs/greenroom-interface",
      "sourceRoot": "libs/greenroom-interface/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/greenroom-interface/tsconfig.lib.json",
              "libs/greenroom-interface/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/greenroom-interface/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/greenroom-interface/jest.config.js",
            "tsConfig": "libs/greenroom-interface/tsconfig.spec.json"
          }
        }
      }
    },
    "greenroom-rest-client": {
      "root": "libs/greenroom-rest-client",
      "sourceRoot": "libs/greenroom-rest-client/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/greenroom-rest-client/tsconfig.lib.json",
              "libs/greenroom-rest-client/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/greenroom-rest-client/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/greenroom-rest-client/jest.config.js",
            "tsConfig": "libs/greenroom-rest-client/tsconfig.spec.json"
          }
        }
      }
    },
    "greenroom-dto": {
      "root": "libs/greenroom-dto",
      "sourceRoot": "libs/greenroom-dto/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/greenroom-dto/tsconfig.lib.json",
              "libs/greenroom-dto/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/greenroom-dto/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/greenroom-dto/jest.config.js",
            "tsConfig": "libs/greenroom-dto/tsconfig.spec.json"
          }
        }
      }
    },
    "util": {
      "root": "libs/util",
      "sourceRoot": "libs/util/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/util/tsconfig.lib.json",
              "libs/util/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/util/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/util/jest.config.js",
            "tsConfig": "libs/util/tsconfig.spec.json"
          }
        }
      }
    },
    "names-not-numbers": {
      "root": "apps/names-not-numbers",
      "sourceRoot": "apps/names-not-numbers/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/names-not-numbers",
            "index": "apps/names-not-numbers/src/index.html",
            "main": "apps/names-not-numbers/src/main.tsx",
            "polyfills": "apps/names-not-numbers/src/polyfills.ts",
            "tsConfig": "apps/names-not-numbers/tsconfig.app.json",
            "assets": [
              "apps/names-not-numbers/src/favicon.ico",
              "apps/names-not-numbers/src/assets"
            ],
            "styles": [
              "apps/names-not-numbers/src/styles.scss"
            ],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/names-not-numbers/src/environments/environment.ts",
                  "with": "apps/names-not-numbers/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "names-not-numbers:build",
            "port": 4201
          },
          "configurations": {
            "production": {
              "buildTarget": "names-not-numbers:build:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/names-not-numbers/tsconfig.app.json",
              "apps/names-not-numbers/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/names-not-numbers/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/names-not-numbers/jest.config.js",
            "tsConfig": "apps/names-not-numbers/tsconfig.spec.json"
          }
        }
      }
    },
    "names-not-numbers-e2e": {
      "root": "apps/names-not-numbers-e2e",
      "sourceRoot": "apps/names-not-numbers-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/names-not-numbers-e2e/cypress.json",
            "tsConfig": "apps/names-not-numbers-e2e/tsconfig.e2e.json",
            "devServerTarget": "names-not-numbers:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "names-not-numbers:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/names-not-numbers-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/names-not-numbers-e2e/**"
            ]
          }
        }
      }
    },
    "move-it-app": {
      "root": "apps/move-it-app",
      "sourceRoot": "apps/move-it-app/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/move-it-app",
            "index": "apps/move-it-app/src/index.html",
            "main": "apps/move-it-app/src/main.tsx",
            "polyfills": "apps/move-it-app/src/polyfills.ts",
            "tsConfig": "apps/move-it-app/tsconfig.app.json",
            "assets": [
              "apps/move-it-app/src/favicon.ico",
              "apps/move-it-app/src/assets"
            ],
            "styles": [
              "apps/move-it-app/src/styles.scss"
            ],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/move-it-app/src/environments/environment.ts",
                  "with": "apps/move-it-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "move-it-app:build",
            "port": 4202
          },
          "configurations": {
            "production": {
              "buildTarget": "move-it-app:build:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/move-it-app/tsconfig.app.json",
              "apps/move-it-app/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/move-it-app/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/move-it-app/jest.config.js",
            "tsConfig": "apps/move-it-app/tsconfig.spec.json"
          }
        }
      }
    },
    "move-it-app-e2e": {
      "root": "apps/move-it-app-e2e",
      "sourceRoot": "apps/move-it-app-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/move-it-app-e2e/cypress.json",
            "tsConfig": "apps/move-it-app-e2e/tsconfig.e2e.json",
            "devServerTarget": "move-it-app:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "move-it-app:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/move-it-app-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/move-it-app-e2e/**"
            ]
          }
        }
      }
    },
    "react-use-dimensions": {
      "root": "libs/react/use-dimensions",
      "sourceRoot": "libs/react/use-dimensions/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/use-dimensions/tsconfig.lib.json",
              "libs/react/use-dimensions/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/use-dimensions/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/use-dimensions/jest.config.js",
            "tsConfig": "libs/react/use-dimensions/tsconfig.spec.json"
          }
        }
      }
    },
    "react-use-overflow-state": {
      "root": "libs/react/use-overflow-state",
      "sourceRoot": "libs/react/use-overflow-state/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/use-overflow-state/tsconfig.lib.json",
              "libs/react/use-overflow-state/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/use-overflow-state/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/use-overflow-state/jest.config.js",
            "tsConfig": "libs/react/use-overflow-state/tsconfig.spec.json"
          }
        }
      }
    },
    "node-util": {
      "root": "libs/node-util",
      "sourceRoot": "libs/node-util/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/node-util/tsconfig.lib.json",
              "libs/node-util/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/node-util/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/node-util/jest.config.js",
            "tsConfig": "libs/node-util/tsconfig.spec.json"
          }
        }
      }
    },
    "reddit": {
      "root": "libs/reddit",
      "sourceRoot": "libs/reddit/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/reddit/tsconfig.lib.json",
              "libs/reddit/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/reddit/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/reddit/jest.config.js",
            "tsConfig": "libs/reddit/tsconfig.spec.json"
          }
        }
      }
    },
    "f5": {
      "root": "apps/f5",
      "sourceRoot": "apps/f5/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "bundle": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/f5",
            "index": "apps/f5/src/index.html",
            "main": "apps/f5/src/main.tsx",
            "polyfills": "apps/f5/src/polyfills.ts",
            "tsConfig": "apps/f5/tsconfig.app.json",
            "assets": [
              "apps/f5/src/meta.image.png",
              "apps/f5/src/favicon.ico",
              "apps/f5/src/assets"
            ],
            "styles": [
              "apps/f5/src/styles.scss"
            ],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack",
            "fileReplacements": [
              {
                "replace": "apps/f5/src/environments/environment.ts",
                "with": "apps/f5/src/environments/environment.prod.ts"
              }
            ],
            "optimization": true,
            "outputHashing": "all",
            "sourceMap": false,
            "extractCss": true,
            "namedChunks": false,
            "extractLicenses": true,
            "vendorChunk": false,
            "budgets": [
              {
                "type": "initial",
                "maximumWarning": "2mb",
                "maximumError": "5mb"
              }
            ]
          },
          "configurations": {
            "one-word-story": {
              "outputPath": "dist/apps/one-word-story",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/one-word-story.ts"
                },
                {
                  "replace": "apps/f5/src/app/validate.ts",
                  "with": "apps/f5/src/app/validate.one-word-story.ts"
                }
              ]
            },
            "f5": {
              "outputPath": "dist/apps/f5",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/f5.ts"
                }
              ]
            },
            "parm": {
              "outputPath": "dist/apps/parm",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/parm.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.parm.tsx"
                }
              ]
            },
            "streamster": {
              "outputPath": "dist/apps/streamster",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/streamster.ts"
                }
              ]
            },
            "stacktrace": {
              "outputPath": "dist/apps/stacktrace",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/stacktrace.ts"
                }
              ]
            },
            "codegumi": {
              "outputPath": "dist/apps/codegumi",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/codegumi.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.codegumi.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.codegumi.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.codegumi.tsx"
                }
              ]
            },
            "hexd": {
              "outputPath": "dist/apps/hexd",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/hexd.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/CurrentCard.tsx",
                  "with": "apps/f5/src/app/CurrentCard.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.hexd.tsx"
                }
              ]
            },
            "supreme": {
              "outputPath": "dist/apps/supreme",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/supreme.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.supreme.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.supreme.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.supreme.tsx"
                }
              ]
            },
            "ganja": {
              "outputPath": "dist/apps/ganja",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/ganja.ts"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.ganja.tsx"
                }
              ]
            },
            "cindy": {
              "outputPath": "dist/apps/cindy",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/cindy.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.cindy.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.cindy.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.cindy.tsx"
                }
              ]
            },
            "scott": {
              "outputPath": "dist/apps/scott",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/scott.ts"
                }
              ]
            },
            "murella": {
              "outputPath": "dist/apps/murella",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/murella.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.murella.tsx"
                }
              ]
            }
          }
        },
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/f5",
            "index": "apps/f5/src/index.local.html",
            "main": "apps/f5/src/main.tsx",
            "polyfills": "apps/f5/src/polyfills.ts",
            "tsConfig": "apps/f5/tsconfig.app.json",
            "assets": [
              "apps/f5/src/meta.image.png",
              "apps/f5/src/favicon.ico",
              "apps/f5/src/assets"
            ],
            "styles": [
              "apps/f5/src/styles.scss"
            ],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "one-word-story": {
              "outputPath": "dist/apps/one-word-story",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/one-word-story.ts"
                },
                {
                  "replace": "apps/f5/src/app/validate.ts",
                  "with": "apps/f5/src/app/validate.one-word-story.ts"
                }
              ]
            },
            "f5": {
              "outputPath": "dist/apps/f5",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/f5.ts"
                }
              ]
            },
            "parm": {
              "outputPath": "dist/apps/parm",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/parm.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.parm.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.parm.tsx"
                }
              ]
            },
            "streamster": {
              "outputPath": "dist/apps/streamster",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/streamster.ts"
                }
              ]
            },
            "stacktrace": {
              "outputPath": "dist/apps/stacktrace",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/stacktrace.ts"
                }
              ]
            },
            "codegumi": {
              "outputPath": "dist/apps/codegumi",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/codegumi.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.codegumi.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.codegumi.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.codegumi.tsx"
                }
              ]
            },
            "hexd": {
              "outputPath": "dist/apps/hexd",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/hexd.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/CurrentCard.tsx",
                  "with": "apps/f5/src/app/CurrentCard.hexd.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.hexd.tsx"
                }
              ]
            },
            "supreme": {
              "outputPath": "dist/apps/supreme",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/supreme.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.supreme.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.supreme.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.supreme.tsx"
                }
              ]
            },
            "ganja": {
              "outputPath": "dist/apps/ganja",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/ganja.ts"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.ganja.tsx"
                }
              ]
            },
            "cindy": {
              "outputPath": "dist/apps/cindy",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/cindy.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.cindy.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.cindy.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.cindy.tsx"
                }
              ]
            },
            "scott": {
              "outputPath": "dist/apps/scott",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/scott.ts"
                }
              ]
            },
            "murella": {
              "outputPath": "dist/apps/murella",
              "fileReplacements": [
                {
                  "replace": "apps/f5/src/environments/environment.ts",
                  "with": "./apps/f5/src/environments/murella.ts"
                },
                {
                  "replace": "apps/f5/src/app/Adventure.tsx",
                  "with": "apps/f5/src/app/Adventure.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/AdventureOptionCard.tsx",
                  "with": "apps/f5/src/app/AdventureOptionCard.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/EndMessage.tsx",
                  "with": "apps/f5/src/app/EndMessage.murella.tsx"
                },
                {
                  "replace": "apps/f5/src/app/Main.tsx",
                  "with": "apps/f5/src/app/Main.murella.tsx"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "f5:build",
            "port": 4203
          },
          "configurations": {
            "production": {
              "buildTarget": "f5:build:production"
            },
            "one-word-story": {
              "buildTarget": "f5:build:one-word-story"
            },
            "f5": {
              "buildTarget": "f5:build:f5"
            },
            "parm": {
              "buildTarget": "f5:build:parm"
            },
            "streamster": {
              "buildTarget": "f5:build:streamster"
            },
            "stacktrace": {
              "buildTarget": "f5:build:stacktrace"
            },
            "codegumi": {
              "buildTarget": "f5:build:codegumi"
            },
            "hexd": {
              "buildTarget": "f5:build:hexd"
            },
            "supreme": {
              "buildTarget": "f5:build:supreme"
            },
            "ganja": {
              "buildTarget": "f5:build:ganja"
            },
            "cindy": {
              "buildTarget": "f5:build:cindy"
            },
            "scott": {
              "buildTarget": "f5:build:scott"
            },
            "murella": {
              "buildTarget": "f5:build:murella"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/f5/tsconfig.app.json",
              "apps/f5/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/f5/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/f5/jest.config.js",
            "tsConfig": "apps/f5/tsconfig.spec.json"
          }
        }
      }
    },
    "f5-e2e": {
      "root": "apps/f5-e2e",
      "sourceRoot": "apps/f5-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/f5-e2e/cypress.json",
            "tsConfig": "apps/f5-e2e/tsconfig.e2e.json",
            "devServerTarget": "f5:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "f5:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/f5-e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/f5-e2e/**"
            ]
          }
        }
      }
    },
    "hello-world": {
      "root": "apps/hello-world",
      "sourceRoot": "apps/hello-world/src",
      "projectType": "application",
      "prefix": "hello-world",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx @google-cloud/functions-framework --target helloWorld --source ./dist/apps/hello-world"
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/hello-world/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/hello-world/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/hello-world/jest.config.js",
            "tsConfig": "apps/hello-world/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/hello-world",
            "main": "apps/hello-world/src/index.ts",
            "yamlConfig": "apps/hello-world/src/environments/.production.yaml",
            "tsConfig": "apps/hello-world/tsconfig.app.json",
            "packageJson": "apps/hello-world/package.json"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy helloWorld --trigger-http --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/hello-world/.production.yaml --source ./dist/apps/hello-world --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    },
    "function-create-checkout": {
      "root": "apps/function-create-checkout",
      "sourceRoot": "apps/function-create-checkout/src",
      "projectType": "application",
      "prefix": "function-create-checkout",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx @google-cloud/functions-framework --target functionCreateCheckout --source ./dist/apps/function-create-checkout"
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/function-create-checkout/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/function-create-checkout/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/function-create-checkout/jest.config.js",
            "tsConfig": "apps/function-create-checkout/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/function-create-checkout",
            "main": "apps/function-create-checkout/src/index.ts",
            "yamlConfig": "apps/function-create-checkout/src/environments/.production.yaml",
            "tsConfig": "apps/function-create-checkout/tsconfig.app.json",
            "packageJson": "apps/function-create-checkout/package.json"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy functionCreateCheckout --trigger-http --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/function-create-checkout/.production.yaml --source ./dist/apps/function-create-checkout --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    },
    "react-date-subtracter": {
      "root": "libs/react/date-subtracter",
      "sourceRoot": "libs/react/date-subtracter/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/date-subtracter/tsconfig.lib.json",
              "libs/react/date-subtracter/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/date-subtracter/**/*"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:bundle",
          "options": {
            "outputPath": "dist/libs/react/date-subtracter",
            "tsConfig": "libs/react/date-subtracter/tsconfig.lib.json",
            "project": "libs/react/date-subtracter/package.json",
            "entryFile": "libs/react/date-subtracter/src/index.ts",
            "babelConfig": "@nrwl/react/plugins/bundle-babel",
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/date-subtracter/jest.config.js",
            "tsConfig": "libs/react/date-subtracter/tsconfig.spec.json"
          }
        }
      }
    },
    "react-reddit-crossposter": {
      "root": "libs/react/reddit-crossposter",
      "sourceRoot": "libs/react/reddit-crossposter/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/reddit-crossposter/tsconfig.lib.json",
              "libs/react/reddit-crossposter/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/reddit-crossposter/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/reddit-crossposter/jest.config.js",
            "tsConfig": "libs/react/reddit-crossposter/tsconfig.spec.json"
          }
        }
      }
    },
    "react-filter-control": {
      "root": "libs/react/filter-control",
      "sourceRoot": "libs/react/filter-control/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/filter-control/tsconfig.lib.json",
              "libs/react/filter-control/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/filter-control/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/filter-control/jest.config.js",
            "tsConfig": "libs/react/filter-control/tsconfig.spec.json"
          }
        }
      }
    },
    "react-use-field": {
      "root": "libs/react/use-field",
      "sourceRoot": "libs/react/use-field/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/use-field/tsconfig.lib.json",
              "libs/react/use-field/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/use-field/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/use-field/jest.config.js",
            "tsConfig": "libs/react/use-field/tsconfig.spec.json"
          }
        }
      }
    },
    "function-image-host": {
      "root": "apps/function-image-host",
      "sourceRoot": "apps/function-image-host/src",
      "projectType": "application",
      "prefix": "function-image-host",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx @google-cloud/functions-framework --target functionImageHost --source ./dist/apps/function-image-host"
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/function-image-host/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/function-image-host/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/function-image-host/jest.config.js",
            "tsConfig": "apps/function-image-host/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/function-image-host",
            "main": "apps/function-image-host/src/index.ts",
            "yamlConfig": "apps/function-image-host/src/environments/.production.yaml",
            "tsConfig": "apps/function-image-host/tsconfig.app.json",
            "packageJson": "apps/function-image-host/package.json"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy functionImageHost --trigger-http --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/function-image-host/.production.yaml --source ./dist/apps/function-image-host --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    },
    "react-reddit-poster": {
      "root": "libs/react/reddit-poster",
      "sourceRoot": "libs/react/reddit-poster/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/react/reddit-poster/tsconfig.lib.json",
              "libs/react/reddit-poster/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/react/reddit-poster/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react/reddit-poster/jest.config.js",
            "tsConfig": "libs/react/reddit-poster/tsconfig.spec.json"
          }
        }
      }
    },
    "f5-expo": {
      "root": "apps/f5/expo",
      "sourceRoot": "apps/f5/expo/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "bundle": {
          "builder": "nx-react-native-expo:bundle",
          "options": {}
        },
        "start": {
          "builder": "nx-react-native-expo:start",
          "options": {}
        },
        "run-ios": {
          "builder": "nx-react-native-expo:run-ios",
          "options": {}
        },
        "run-android": {
          "builder": "nx-react-native-expo:run-android",
          "options": {}
        },
        "run-web": {
          "builder": "nx-react-native-expo:run-web",
          "options": {}
        },
        "publish": {
          "builder": "nx-react-native-expo:publish",
          "options": {}
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/f5/expo/tsconfig.json",
              "apps/f5/expo/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/f5/expo/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/f5/expo/jest.config.js",
            "tsConfig": "apps/f5/expo/tsconfig.spec.json"
          }
        }
      }
    },
    "function-google-me": {
      "root": "apps/function-google-me",
      "sourceRoot": "apps/function-google-me/src",
      "projectType": "application",
      "prefix": "function-google-me",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx @google-cloud/functions-framework --target functionGoogleMe --source ./dist/apps/function-google-me"
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/function-google-me/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/function-google-me/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/function-google-me/jest.config.js",
            "tsConfig": "apps/function-google-me/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/function-google-me",
            "main": "apps/function-google-me/src/index.ts",
            "yamlConfig": "apps/function-google-me/src/environments/.production.yaml",
            "tsConfig": "apps/function-google-me/tsconfig.app.json",
            "packageJson": "apps/function-google-me/package.json"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy functionGoogleMe --trigger-http --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/function-google-me/.production.yaml --source ./dist/apps/function-google-me --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    },
    "function-send-email": {
      "root": "apps/function-send-email",
      "sourceRoot": "apps/function-send-email/src",
      "projectType": "application",
      "prefix": "function-send-email",
      "schematics": {},
      "architect": {
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "npx @google-cloud/functions-framework --target functionSendEmail --source ./dist/apps/function-send-email"
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/function-send-email/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/function-send-email/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/function-send-email/jest.config.js",
            "tsConfig": "apps/function-send-email/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/function-send-email",
            "main": "apps/function-send-email/src/index.ts",
            "yamlConfig": "apps/function-send-email/src/environments/.production.yaml",
            "tsConfig": "apps/function-send-email/tsconfig.app.json",
            "packageJson": "apps/function-send-email/package.json"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy functionSendEmail --trigger-http --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/function-send-email/.production.yaml --source ./dist/apps/function-send-email --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    },
    "function-generate-static-node-view": {
      "root": "apps/function-generate-static-node-view",
      "sourceRoot": "apps/function-generate-static-node-view/src",
      "projectType": "application",
      "prefix": "function-generate-static-node-view",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/function-generate-static-node-view/tsconfig.app.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/function-generate-static-node-view/**/*"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/function-generate-static-node-view/jest.config.js",
            "tsConfig": "apps/function-generate-static-node-view/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@joelcode/gcp-function:build",
          "options": {
            "outputPath": "dist/apps/function-generate-static-node-view",
            "main": "apps/function-generate-static-node-view/src/index.ts",
            "yamlConfig": "apps/function-generate-static-node-view/src/environments/.production.yaml",
            "tsConfig": "apps/function-generate-static-node-view/tsconfig.app.json",
            "packageJson": "apps/function-generate-static-node-view/package.json",
            "assets": [
              "apps/function-generate-static-node-view/src/index.njk",
              "apps/function-generate-static-node-view/src/env/parm-names-not-numbers.json"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "gcloud functions deploy functionGenerateStaticNodeView --trigger-topic writeEvent --runtime nodejs10 --region us-central1 --env-vars-file ./dist/apps/function-generate-static-node-view/.production.yaml --source ./dist/apps/function-generate-static-node-view --max-instances 10 --allow-unauthenticated"
              }
            ]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/workspace"
  },
  "schematics": {
    "@nrwl/react": {
      "application": {
        "style": "scss",
        "linter": "tslint",
        "babel": true
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "tslint"
      }
    }
  },
  "defaultProject": "react"
}